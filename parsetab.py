
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS DIVIDE EARTH FIRE LPAREN METAL MINUS MODULO MULTIPLY NUMBER PLUS RPAREN WATER WOOD WORDexpression : WATER PLUS FIRE\n                  | FIRE PLUS WATERexpression : FIRE PLUS METAL\n                  | METAL PLUS FIREexpression : WOOD PLUS EARTH\n                  | EARTH PLUS WOODexpression : METAL PLUS WOOD\n                  | WOOD PLUS METALexpression : EARTH PLUS WATER\n                  | WATER PLUS EARTHterm : WORDexpression : term PLUS termexpression : ABS LPAREN factor MINUS factor RPAREN\n                  | factor PLUS factor\n                  | factor MINUS factor\n                  | factor DIVIDE factor\n                  | factor MULTIPLY factor\n                  | factor MODULO factorfactor : NUMBER'
    
_lr_action_items = {'WATER':([0,13,16,],[2,26,33,]),'FIRE':([0,12,14,],[3,24,28,]),'METAL':([0,13,15,],[4,27,31,]),'WOOD':([0,14,16,],[5,29,32,]),'EARTH':([0,12,15,],[6,25,30,]),'ABS':([0,],[8,]),'WORD':([0,17,],[10,10,]),'NUMBER':([0,18,19,20,21,22,23,41,],[11,11,11,11,11,11,11,11,]),'$end':([1,10,11,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,43,],[0,-11,-19,-1,-10,-2,-3,-4,-7,-5,-8,-6,-9,-12,-14,-15,-16,-17,-18,-13,]),'PLUS':([2,3,4,5,6,7,9,10,11,],[12,13,14,15,16,17,19,-11,-19,]),'LPAREN':([8,],[18,]),'MINUS':([9,11,35,],[20,-19,41,]),'DIVIDE':([9,11,],[21,-19,]),'MULTIPLY':([9,11,],[22,-19,]),'MODULO':([9,11,],[23,-19,]),'RPAREN':([11,42,],[-19,43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'term':([0,17,],[7,34,]),'factor':([0,18,19,20,21,22,23,41,],[9,35,36,37,38,39,40,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> WATER PLUS FIRE','expression',3,'p_expression_water_plus','element_yacc.py',22),
  ('expression -> FIRE PLUS WATER','expression',3,'p_expression_water_plus','element_yacc.py',23),
  ('expression -> FIRE PLUS METAL','expression',3,'p_expression_fire_plus','element_yacc.py',27),
  ('expression -> METAL PLUS FIRE','expression',3,'p_expression_fire_plus','element_yacc.py',28),
  ('expression -> WOOD PLUS EARTH','expression',3,'p_expression_wood_plus','element_yacc.py',32),
  ('expression -> EARTH PLUS WOOD','expression',3,'p_expression_wood_plus','element_yacc.py',33),
  ('expression -> METAL PLUS WOOD','expression',3,'p_expression_metal_plus','element_yacc.py',37),
  ('expression -> WOOD PLUS METAL','expression',3,'p_expression_metal_plus','element_yacc.py',38),
  ('expression -> EARTH PLUS WATER','expression',3,'p_expression_earth_plus','element_yacc.py',42),
  ('expression -> WATER PLUS EARTH','expression',3,'p_expression_earth_plus','element_yacc.py',43),
  ('term -> WORD','term',1,'p_term_word','element_yacc.py',47),
  ('expression -> term PLUS term','expression',3,'p_expression_word_plus','element_yacc.py',51),
  ('expression -> ABS LPAREN factor MINUS factor RPAREN','expression',6,'p_expression_number_functions','element_yacc.py',55),
  ('expression -> factor PLUS factor','expression',3,'p_expression_number_functions','element_yacc.py',56),
  ('expression -> factor MINUS factor','expression',3,'p_expression_number_functions','element_yacc.py',57),
  ('expression -> factor DIVIDE factor','expression',3,'p_expression_number_functions','element_yacc.py',58),
  ('expression -> factor MULTIPLY factor','expression',3,'p_expression_number_functions','element_yacc.py',59),
  ('expression -> factor MODULO factor','expression',3,'p_expression_number_functions','element_yacc.py',60),
  ('factor -> NUMBER','factor',1,'p_factor_num','element_yacc.py',81),
]
